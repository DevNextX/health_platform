# Optimized Docker Compose for local development and testing
# Generated by Zhuang
version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: health-platform-backend:local
    environment:
      # Database configuration - using SQLite for local development
      - DATABASE_URL=${DATABASE_URL:-sqlite:///instance/health_platform.db}
      # Auto table creation controls
      - DB_AUTO_CREATE=${DB_AUTO_CREATE:-1}
      - DB_CREATE_ON_MISSING=${DB_CREATE_ON_MISSING:-1}
      # JWT configuration
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-in-production}
      - JWT_ACCESS_MINUTES=${JWT_ACCESS_MINUTES:-30}
      - JWT_REFRESH_DAYS=${JWT_REFRESH_DAYS:-7}
      # CORS configuration
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:8080,http://127.0.0.1:8080,http://frontend:80}
      # Server configuration
      - PORT=5000
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-2}
      - GUNICORN_THREADS=${GUNICORN_THREADS:-4}
    ports:
      - "5000:5000"
    volumes:
      # Persist database
      - backend_data:/app/instance
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:5000/healthz', timeout=3)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - health-platform

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: health-platform-frontend:local
    environment:
      - API_URL=${API_URL:-http://backend:5000}
      - LISTEN_PORT=80
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:80/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - health-platform

  # Optional: MySQL for production-like testing
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=healthdb
      - MYSQL_USER=healthuser
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-healthpass123}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpass123}
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - health-platform
    profiles:
      - mysql

  # Optional: Redis for session storage or caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - health-platform
    profiles:
      - redis

volumes:
  backend_data:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  health-platform:
    driver: bridge
    name: health-platform-network
