/**
 * API Service for Health Platform
 * Generated by Zhuang
 */
import axios from 'axios';

const BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';

// Create axios instance
const api = axios.create({
  baseURL: BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
});

// Request interceptor to add auth token
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('access_token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// Response interceptor to handle token refresh
api.interceptors.response.use(
  (response) => {
    return response;
  },
  async (error) => {
    const originalRequest = error.config;

    if (error.response?.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true;

      try {
        const refreshToken = localStorage.getItem('refresh_token');
        if (refreshToken) {
          const response = await axios.post(`${BASE_URL}/api/v1/auth/refresh`, {}, {
            headers: {
              Authorization: `Bearer ${refreshToken}`,
            },
          });

          const { access_token, refresh_token } = response.data;
          localStorage.setItem('access_token', access_token);
          localStorage.setItem('refresh_token', refresh_token);

          // Retry original request with new token
          originalRequest.headers.Authorization = `Bearer ${access_token}`;
          return api(originalRequest);
        }
      } catch (refreshError) {
        // Refresh failed, redirect to login
        localStorage.removeItem('access_token');
        localStorage.removeItem('refresh_token');
        window.location.href = '/login';
        return Promise.reject(refreshError);
      }
    }

    return Promise.reject(error);
  }
);

// Auth APIs
export const authAPI = {
  register: (userData) => api.post('/api/v1/auth/register', userData),
  login: (credentials) => api.post('/api/v1/auth/login', credentials),
  refresh: () => api.post('/api/v1/auth/refresh'),
  logout: () => api.post('/api/v1/auth/logout'),
  logoutAll: () => api.post('/api/v1/auth/logout-all'),
};

// User APIs
export const userAPI = {
  getProfile: (userId) => api.get(`/api/v1/user/${userId}`),
  updateProfile: (userId, userData) => api.put(`/api/v1/user/${userId}`, userData),
};

// Health Record APIs
export const healthAPI = {
  createRecord: (recordData) => api.post('/api/v1/health', recordData),
  getRecords: (params) => api.get('/api/v1/health', { params }),
  getRecord: (recordId) => api.get(`/api/v1/health/${recordId}`),
  updateRecord: (recordId, recordData) => api.put(`/api/v1/health/${recordId}`, recordData),
  deleteRecord: (recordId) => api.delete(`/api/v1/health/${recordId}`),
};

export default api;
