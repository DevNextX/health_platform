/**
 * Global Member Selection Context. Generated by Zhuang
 */
import React, { createContext, useContext, useEffect, useState } from 'react';

const MemberContext = createContext({ selectedMemberId: undefined, setSelectedMemberId: () => {} });

export const MemberProvider = ({ children }) => {
  const [selectedMemberId, setSelectedMemberId] = useState(() => {
    try {
      const v = localStorage.getItem('selected_member_id');
      return v ? Number(v) : undefined;
    } catch {
      return undefined;
    }
  });

  useEffect(() => {
    try {
      if (selectedMemberId === undefined || selectedMemberId === null) {
        localStorage.removeItem('selected_member_id');
      } else {
        localStorage.setItem('selected_member_id', String(selectedMemberId));
      }
    } catch {}
  }, [selectedMemberId]);

  return (
    <MemberContext.Provider value={{ selectedMemberId, setSelectedMemberId }}>
      {children}
    </MemberContext.Provider>
  );
};

export const useMember = () => useContext(MemberContext);
