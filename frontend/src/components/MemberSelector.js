/**
 * MemberSelector component to choose a family member. Generated by Zhuang
 */
import React, { useEffect, useState } from 'react';
import { Select, Spin, message } from 'antd';
import { useTranslation } from 'react-i18next';
import { memberAPI } from '../services/api';

const MemberSelector = ({ value, onChange, style }) => {
  const { t } = useTranslation();
  const [loading, setLoading] = useState(false);
  const [members, setMembers] = useState([]);

  useEffect(() => {
    const load = async () => {
      try {
        setLoading(true);
        const resp = await memberAPI.list();
        const list = resp.data.members || [];
        setMembers(list);
        // If current value is not in list (e.g., got deleted), reset to default
        if (value != null && !list.some(m => m.id === value)) {
          onChange?.(undefined);
        }
      } catch (e) {
        console.error('Failed to load members', e);
    message.error(t('members.messages.loadFail'));
        onChange?.(undefined);
      } finally {
        setLoading(false);
      }
    };
    load();
  }, [onChange, value, t]);

  // Auto-select default when not set
  useEffect(() => {
    if (members.length && (value === undefined || value === null)) {
      const selfMember = members.find(m => (m.full_name || '').toLowerCase() === 'self');
      const defaultId = selfMember ? selfMember.id : members[0].id;
      onChange?.(defaultId);
    }
  }, [members, value, onChange]);

  if (loading) return <Spin size="small" />;

  // Generated by Zhuang: Localize display name for default self member to Chinese '自己'
  const options = members.map(m => ({
    label: (m.full_name || `Member${m.id}`).toLowerCase() === 'self' ? t('members.self.display') : (m.full_name || `Member${m.id}`),
    value: m.id,
  }));

  return (
    <Select
      value={value}
      onChange={onChange}
      options={options}
  placeholder={t('members.select.placeholder')}
      style={{ minWidth: 160, ...style }}
    />
  );
};

export default MemberSelector;
