/**
 * Main Layout Component
 * Generated by Zhuang
 */
import React, { useState } from 'react';
import { Outlet, useNavigate, useLocation } from 'react-router-dom';
import {
  Layout as AntLayout,
  Menu,
  Button,
  Drawer,
  message,
} from 'antd';
import {
  DashboardOutlined,
  HeartOutlined,
  UserOutlined,
  LogoutOutlined,
  MenuOutlined,
} from '@ant-design/icons';
import { authAPI } from '../services/api';
import { clearTokens } from '../utils/auth';

const { Header, Content, Sider } = AntLayout;

const Layout = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const [collapsed, setCollapsed] = useState(false);
  const [mobileMenuVisible, setMobileMenuVisible] = useState(false);

  const menuItems = [
    {
      key: '/dashboard',
      icon: <DashboardOutlined />,
      label: '仪表板',
      onClick: () => navigate('/dashboard'),
    },
    {
      key: '/health-records',
      icon: <HeartOutlined />,
      label: '健康记录',
      onClick: () => navigate('/health-records'),
    },
    {
      key: '/profile',
      icon: <UserOutlined />,
      label: '个人信息',
      onClick: () => navigate('/profile'),
    },
  ];

  const handleLogout = async () => {
    try {
      await authAPI.logout();
      clearTokens();
      message.success('已成功退出登录');
      navigate('/login');
    } catch (error) {
      console.error('Logout error:', error);
      // Even if API call fails, clear tokens and redirect
      clearTokens();
      navigate('/login');
    }
  };

  const siderContent = (
    <>
      <div style={{ 
        height: 64, 
        display: 'flex', 
        alignItems: 'center', 
        justifyContent: 'center',
        borderBottom: '1px solid #f0f0f0',
        background: '#fff'
      }}>
        <h3 style={{ margin: 0, color: '#1890ff' }}>健康平台</h3>
      </div>
      <Menu
        theme="light"
        mode="inline"
        selectedKeys={[location.pathname]}
        items={menuItems}
        style={{ borderRight: 0 }}
      />
    </>
  );

  return (
    <AntLayout className="health-platform-layout">
      {/* Desktop Sidebar */}
      <Sider
        collapsible
        collapsed={collapsed}
        onCollapse={setCollapsed}
        breakpoint="lg"
        collapsedWidth="0"
        className="desktop-sider"
        style={{
          overflow: 'auto',
          height: '100vh',
          position: 'fixed',
          left: 0,
          top: 0,
          bottom: 0,
          background: '#fff',
        }}
      >
        {siderContent}
      </Sider>

      {/* Mobile Drawer */}
      <Drawer
        title="健康平台"
        placement="left"
        onClose={() => setMobileMenuVisible(false)}
        open={mobileMenuVisible}
        bodyStyle={{ padding: 0 }}
        className="mobile-drawer"
      >
        <Menu
          mode="inline"
          selectedKeys={[location.pathname]}
          items={menuItems}
          onClick={() => setMobileMenuVisible(false)}
        />
      </Drawer>

      <AntLayout style={{ marginLeft: collapsed ? 0 : 200 }}>
        <Header
          style={{
            padding: '0 24px',
            background: '#fff',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            borderBottom: '1px solid #f0f0f0',
          }}
        >
          <div style={{ display: 'flex', alignItems: 'center' }}>
            <Button
              type="text"
              icon={<MenuOutlined />}
              onClick={() => setMobileMenuVisible(true)}
              className="mobile-menu-button"
              style={{ display: 'none' }}
            />
            <h4 style={{ margin: 0, marginLeft: 16 }}>
              {menuItems.find(item => item.key === location.pathname)?.label || '健康平台'}
            </h4>
          </div>
          <Button
            type="text"
            icon={<LogoutOutlined />}
            onClick={handleLogout}
            style={{ color: '#ff4d4f' }}
          >
            退出登录
          </Button>
        </Header>
        <Content style={{ padding: '24px', minHeight: 'calc(100vh - 64px)' }}>
          <Outlet />
        </Content>
      </AntLayout>

      <style jsx>{`
        @media (max-width: 992px) {
          .desktop-sider {
            display: none !important;
          }
          .ant-layout {
            margin-left: 0 !important;
          }
          .mobile-menu-button {
            display: inline-flex !important;
          }
        }
        @media (min-width: 993px) {
          .mobile-drawer {
            display: none;
          }
        }
      `}</style>
    </AntLayout>
  );
};

export default Layout;
