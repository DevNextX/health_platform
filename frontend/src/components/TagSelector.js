/**
 * Tag Selector Component
 * Generated by Zhuang
 */
import React from 'react';
import { Select, Tag, Tooltip } from 'antd';
import { useTranslation } from 'react-i18next';
import { COMMON_TAG_DEFS, tagValueToLabel } from '../utils/tagI18n';

const { Option } = Select;

const TagSelector = ({ value = [], onChange, placeholder, options = [], ...rest }) => {
  const { t } = useTranslation();

  // Map for quick value->label resolution (recomputed on language change via t)
  const valueToLabel = new Map(
    COMMON_TAG_DEFS.map(({ id, value }) => [value, t(`tags.${id}`)])
  );

  const handleChange = (newValue) => onChange?.(newValue);

  return (
    <div className="tag-selector">
  <Select
        mode="tags" // Generated by Zhuang: allow free input by typing and Enter
        style={{ width: '100%' }}
  placeholder={placeholder || t('health.filters.tags')}
        value={value}
        onChange={handleChange}
        allowClear
        showSearch
        optionLabelProp="label"
        {...rest}
      >
        {Array.from(new Set([
          ...COMMON_TAG_DEFS.map(x => x.value), // suggested values (Chinese)
          ...(options || []),
          ...(value || []),
        ])).map(tagValue => {
          const label = valueToLabel.get(tagValue) || tagValueToLabel(tagValue, t);
          return (
            <Option key={tagValue} value={tagValue} label={label} title={label}>
              <Tooltip title={label} placement="right">
                <Tag color="blue" style={{ maxWidth: 240, overflow: 'hidden', textOverflow: 'ellipsis' }}>{label}</Tag>
              </Tooltip>
            </Option>
          );
        })}
      </Select>
    </div>
  );
};

export default TagSelector;
