/**
 * Tag Selector Component
 * Generated by Zhuang
 */
import React, { useState } from 'react';
import { Select, Tag } from 'antd';
import { PlusOutlined } from '@ant-design/icons';

const { Option } = Select;

const TagSelector = ({ value = [], onChange, placeholder = "选择或添加标签" }) => {
  const [inputVisible, setInputVisible] = useState(false);
  const [inputValue, setInputValue] = useState('');

  // Predefined common tags
  const commonTags = [
    '晨起',
    '睡前',
    '运动前',
    '运动后',
    '餐前',
    '餐后',
    '服药前',
    '服药后',
    '工作时',
    '休息时',
    '紧张时',
    '放松时',
    '头痛',
    '头晕',
    '胸闷',
    '心悸',
    '疲劳',
  ];

  const handleChange = (newValue) => {
    onChange?.(newValue);
  };

  const handleInputConfirm = () => {
    if (inputValue && !value.includes(inputValue)) {
      const newTags = [...value, inputValue];
      handleChange(newTags);
    }
    setInputVisible(false);
    setInputValue('');
  };

  const handleInputChange = (e) => {
    setInputValue(e.target.value);
  };

  const showInput = () => {
    setInputVisible(true);
  };

  return (
    <div className="tag-selector">
      <Select
        mode="multiple"
        style={{ width: '100%' }}
        placeholder={placeholder}
        value={value}
        onChange={handleChange}
        optionLabelProp="label"
        dropdownRender={(menu) => (
          <div>
            {menu}
            <div style={{ padding: '8px', borderTop: '1px solid #f0f0f0' }}>
              {!inputVisible ? (
                <Tag
                  onClick={showInput}
                  style={{
                    background: '#fff',
                    borderStyle: 'dashed',
                    cursor: 'pointer',
                  }}
                >
                  <PlusOutlined /> 新建标签
                </Tag>
              ) : (
                <input
                  type="text"
                  size="small"
                  style={{
                    width: 100,
                    marginInlineEnd: 8,
                    verticalAlign: 'top',
                    border: '1px solid #d9d9d9',
                    borderRadius: '6px',
                    padding: '4px 8px',
                  }}
                  value={inputValue}
                  onChange={handleInputChange}
                  onBlur={handleInputConfirm}
                  onPressEnter={handleInputConfirm}
                  placeholder="输入标签名"
                  autoFocus
                />
              )}
            </div>
          </div>
        )}
      >
        {commonTags.map(tag => (
          <Option key={tag} value={tag} label={tag}>
            <Tag color="blue">{tag}</Tag>
          </Option>
        ))}
        {value.filter(tag => !commonTags.includes(tag)).map(tag => (
          <Option key={tag} value={tag} label={tag}>
            <Tag color="green">{tag}</Tag>
          </Option>
        ))}
      </Select>
    </div>
  );
};

export default TagSelector;
