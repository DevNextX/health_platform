/**
 * Login Page Component
 * Generated by Zhuang
 */
import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { Form, Input, Button, Card, Typography, message, Space } from 'antd';
import { UserOutlined, LockOutlined } from '@ant-design/icons';
import { authAPI } from '../services/api';
import { setTokens } from '../utils/auth';
import { useTranslation } from 'react-i18next';

const { Title, Text } = Typography;

const Login = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const { t } = useTranslation();

  const onFinish = async (values) => {
    setLoading(true);
    try {
      const response = await authAPI.login(values);
      const { access_token, refresh_token } = response.data;
      
      setTokens(access_token, refresh_token);
  message.success(t('messages.login.success'));
      navigate('/dashboard');
    } catch (error) {
      console.error('Login error:', error);
  const errorMessage = error.response?.data?.message || t('messages.login.fail');
      message.error(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ 
      minHeight: '100vh', 
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: '20px'
    }}>
      <Card className="login-form">
        <div style={{ textAlign: 'center', marginBottom: 32 }}>
          <Title level={2} style={{ color: '#1890ff', marginBottom: 8 }}>
            {t('login.title')}
          </Title>
          <Text type="secondary">{t('login.subtitle')}</Text>
        </div>

        <Form
          name="login"
          initialValues={{ remember: true }}
          onFinish={onFinish}
          size="large"
        >
          <Form.Item
            name="email"
            rules={[
              { required: true, message: t('register.email') + '!' },
              { type: 'email', message: t('register.email') + '!' }
            ]}
          >
            <Input
              prefix={<UserOutlined />}
              placeholder={t('login.email')}
              data-testid="login-email" // Generated by Zhuang: stable selector for E2E
            />
          </Form.Item>

          <Form.Item
            name="password"
            rules={[{ required: true, message: t('login.password') + '!' }]}
          >
            <Input.Password
              prefix={<LockOutlined />}
              placeholder={t('login.password')}
              data-testid="login-password" // Generated by Zhuang: stable selector for E2E
            />
          </Form.Item>

          <Form.Item>
            <Button
              type="primary"
              htmlType="submit"
              loading={loading}
              block
              data-testid="login-submit" // Generated by Zhuang: stable selector for E2E
            >
              {t('login.submit')}
            </Button>
          </Form.Item>
        </Form>

        <div style={{ textAlign: 'center' }}>
          <Space>
            <Text type="secondary">{t('login.toRegister')}</Text>
            <Link to="/register">{t('login.registerNow')}</Link>
          </Space>
        </div>
      </Card>
    </div>
  );
};

export default Login;
