"""
Utilities: pagination helper, validation, time, responses. Generated by Zhuang
"""
from typing import Any, Dict, Tuple
from flask import request


DEFAULT_PAGE_SIZE = 20
MAX_PAGE_SIZE = 100


def get_pagination_params() -> Tuple[int, int]:
    try:
        page = int(request.args.get("page", 1))
    except ValueError:
        page = 1
    try:
        size = int(request.args.get("size", DEFAULT_PAGE_SIZE))
    except ValueError:
        size = DEFAULT_PAGE_SIZE
    size = max(1, min(size, MAX_PAGE_SIZE))
    page = max(1, page)
    return page, size


def make_pagination(page: int, size: int, total: int) -> Dict[str, Any]:
    pages = (total + size - 1) // size  # Calculate total pages (ceiling division)
    return {"page": page, "size": size, "total": total, "pages": pages}


def ok(data: Any = None, **kwargs):
    payload = {"data": data} if data is not None else {}
    payload.update(kwargs)
    return payload


def error(code: str, message: str, details: Any = None, trace_id: str | None = None):
    body: Dict[str, Any] = {"code": code, "message": message}
    if details is not None:
        body["details"] = details
    if trace_id:
        body["traceId"] = trace_id
    return body
