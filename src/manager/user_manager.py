"""
User manager layer. Generated by Zhuang
"""
from typing import Optional
from sqlalchemy.exc import IntegrityError
from ..extensions import db
from ..models import User
from ..security import hash_password


class UserManager:
    def create_user(self, username: str, email: str, password: str,
                    age: Optional[int] = None, gender: Optional[str] = None, weight: Optional[float] = None) -> User:
        user = User()
        user.username = username
        user.email = email
        user.password_hash = hash_password(password)
        user.age = age
        user.gender = gender
        user.weight = weight
        db.session.add(user)
        try:
            db.session.commit()
        except IntegrityError:
            db.session.rollback()
            raise ValueError("EMAIL_EXISTS")
        return user

    def get_user(self, user_id: int) -> Optional[User]:
        # Use modern Session.get API to avoid LegacyAPIWarning
        return db.session.get(User, user_id)

    def get_user_by_email(self, email: str) -> Optional[User]:
        return User.query.filter_by(email=email).first()

    def update_user(self, user: User, **fields) -> User:
        for k, v in fields.items():
            if v is not None and hasattr(user, k):
                setattr(user, k, v)
        db.session.commit()
        return user

    def bump_token_version(self, user: User):
        user.token_version += 1
        db.session.commit()
