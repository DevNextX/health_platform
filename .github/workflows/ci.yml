# CI workflow to build and push Docker images for backend and frontend
# Generated by Zhuang

name: Build and Push Images

on:
	push:
		branches:
			- main
			- 'MVP*'
			- MVP2.0-GPT5

permissions:
	contents: read
	packages: write

concurrency:
	group: docker-${{ github.workflow }}-${{ github.ref }}
	cancel-in-progress: true

jobs:
	build-and-push:
		runs-on: ubuntu-latest
		steps:
			- name: Checkout
				uses: actions/checkout@v4

			- name: Set up Docker Buildx
				uses: docker/setup-buildx-action@v3

			- name: Log in to GitHub Container Registry
				uses: docker/login-action@v3
				with:
					registry: ghcr.io
					username: ${{ github.actor }}
					password: ${{ secrets.GITHUB_TOKEN }}

			# Backend metadata (tags/labels)
			- name: Extract backend image metadata
				id: meta_backend
				uses: docker/metadata-action@v5
				with:
					images: ghcr.io/${{ github.repository_owner }}/health-platform-backend
					flavor: |
						latest=auto
					tags: |
						type=ref,event=branch
						type=sha
						type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
						type=raw,value=mvp,enable=${{ startsWith(github.ref_name, 'MVP') }}

			- name: Build and push backend image
				uses: docker/build-push-action@v5
				with:
					context: .
					file: Dockerfile.backend
					push: true
					tags: ${{ steps.meta_backend.outputs.tags }}
					labels: ${{ steps.meta_backend.outputs.labels }}

			# Frontend metadata (tags/labels)
			- name: Extract frontend image metadata
				id: meta_frontend
				uses: docker/metadata-action@v5
				with:
					images: ghcr.io/${{ github.repository_owner }}/health-platform-frontend
					flavor: |
						latest=auto
					tags: |
						type=ref,event=branch
						type=sha
						type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
						type=raw,value=mvp,enable=${{ startsWith(github.ref_name, 'MVP') }}

			- name: Build and push frontend image
				uses: docker/build-push-action@v5
				with:
					context: .
					file: Dockerfile.frontend
					push: true
					tags: ${{ steps.meta_frontend.outputs.tags }}
					labels: ${{ steps.meta_frontend.outputs.labels }}

