# MVP Branch Testing Deployment
# Generated by Zhuang
# For testing deployment from MVP2.0-GPT5 branch

name: MVP Branch Test Deploy

on:
  push:
    branches: [MVP2.0-GPT5]
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Target Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging

permissions:
  contents: read
  packages: write

concurrency:
  group: mvp-test-deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-test-deploy:
    runs-on: ubuntu-latest
    # Only use environment if deploying to dev
    environment: ${{ github.event.inputs.target_environment == 'dev' && 'development' || null }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Test frontend build first
      - name: Build frontend image (test)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend.nonroot
          push: false
          tags: health-platform-frontend:test-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Test backend build
      - name: Build backend image (test)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.backend
          push: false
          tags: health-platform-backend:test-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push images if tests pass
        if: success()
        run: |
          echo "üéâ Build tests passed! Now pushing images..."
          
          # Build and push frontend
          docker buildx build \
            --file Dockerfile.frontend.nonroot \
            --tag ghcr.io/${{ github.repository_owner }}/health-platform-frontend:mvp-${{ github.sha }} \
            --tag ghcr.io/${{ github.repository_owner }}/health-platform-frontend:mvp-latest \
            --push .
            
          # Build and push backend  
          docker buildx build \
            --file Dockerfile.backend \
            --tag ghcr.io/${{ github.repository_owner }}/health-platform-backend:mvp-${{ github.sha }} \
            --tag ghcr.io/${{ github.repository_owner }}/health-platform-backend:mvp-latest \
            --push .

      # Optional deployment to dev environment
      - name: Deploy to Development (if requested)
        if: success() && github.event.inputs.target_environment == 'dev'
        env:
          ENVIRONMENT: dev
          NAMESPACE: ${{ vars.NAMESPACE || 'health-platform-dev' }}
          IMAGE_TAG: mvp-${{ github.sha }}
          REGISTRY_URL: ${{ vars.REGISTRY_URL || 'ghcr.io/devnextx' }}
          SERVICE_TYPE: ${{ vars.SERVICE_TYPE || 'LoadBalancer' }}
          FLASK_ENV: development
          BACKEND_REPLICAS: ${{ vars.BACKEND_REPLICAS || '1' }}
          FRONTEND_REPLICAS: ${{ vars.FRONTEND_REPLICAS || '1' }}
          # Fixed resource limits
          BACKEND_MEMORY_REQUEST: 256Mi
          BACKEND_CPU_REQUEST: 250m
          BACKEND_MEMORY_LIMIT: 512Mi
          BACKEND_CPU_LIMIT: 500m
          FRONTEND_MEMORY_REQUEST: 128Mi
          FRONTEND_CPU_REQUEST: 100m
          FRONTEND_MEMORY_LIMIT: 256Mi
          FRONTEND_CPU_LIMIT: 200m
          KUBE_CONTEXT: ${{ secrets.KUBE_CONTEXT }}
        run: |
          echo "üöÄ Deploying MVP build to Development environment"
          echo "üì¶ Using image tag: ${IMAGE_TAG}"
          
          # Setup kubectl (only if secrets are available)
          if [ -n "${{ secrets.KUBE_CONFIG }}" ] && [ -n "${{ secrets.KUBE_CONTEXT }}" ]; then
            echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
            export KUBECONFIG=kubeconfig
            kubectl config use-context $KUBE_CONTEXT
            
            # Install envsubst
            sudo apt-get update && sudo apt-get install -y gettext-base
            
            # Run deployment
            chmod +x deploy/deploy-configurable.sh
            ./deploy/deploy-configurable.sh
            
            echo "‚úÖ MVP deployment completed!"
            kubectl get pods,svc -n ${NAMESPACE}
          else
            echo "‚ö†Ô∏è  Kubernetes secrets not configured, skipping actual deployment"
            echo "Images have been built and pushed successfully!"
          fi

      - name: Summary
        if: always()
        run: |
          echo "üèóÔ∏è  MVP Branch Build Summary:"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Images built: health-platform-frontend:mvp-${{ github.sha }}, health-platform-backend:mvp-${{ github.sha }}"
          
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ All builds successful!"
            echo "üöÄ Ready to merge to develop branch for automatic deployment"
          else
            echo "‚ùå Build failed - check logs above"
          fi
