"""
Tests for simplified family members. Generated by Zhuang
"""
import pytest


class TestMembers:
    def test_crud_members(self, client, auth_headers):
        access = auth_headers['access']

        # List should contain default Self
        r = client.get('/api/v1/members', headers=access)
        assert r.status_code == 200
        members = r.get_json()['members']
        assert any(m['full_name'] == 'Self' for m in members)

        # Create a new member
        r = client.post('/api/v1/members', json={
            'full_name': 'Dad', 'gender': 'male', 'age': 62, 'height': 170, 'weight': 68
        }, headers=access)
        assert r.status_code == 201
        dad = r.get_json()
        assert dad['full_name'] == 'Dad'

        # Update member
        r = client.put(f"/api/v1/members/{dad['id']}", json={'weight': 69}, headers=access)
        assert r.status_code == 200
        assert r.get_json()['weight'] == 69

        # Soft delete
        r = client.delete(f"/api/v1/members/{dad['id']}", headers=access)
        assert r.status_code == 200

    def test_subject_member_record_flow(self, client, auth_headers):
        access = auth_headers['access']
        # Create member
        r = client.post('/api/v1/members', json={'full_name': 'Mom'}, headers=access)
        mom_id = r.get_json()['id']

        # Create record for Mom
        rec = {
            'systolic': 120,
            'diastolic': 80,
            'subject_member_id': mom_id,
            'tags': ['home']
        }
        r = client.post('/api/v1/health', json=rec, headers=access)
        assert r.status_code == 201

        # List by Mom
        r = client.get(f'/api/v1/health?subject_member_id={mom_id}', headers=access)
        assert r.status_code == 200
        data = r.get_json()['records']
        assert len(data) >= 1
