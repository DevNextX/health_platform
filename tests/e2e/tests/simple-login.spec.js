/**
 * Simple Login Test for Debugging
 * Generated by Zhuang
 */
import { test, expect } from '@playwright/test';

test.describe('Simple Login Test', () => {
  
  test('should be able to access login page', async ({ page }) => {
    await page.goto('/login');
    
    // Check if login page loads
    await expect(page.locator('text=请登录您的账户')).toBeVisible();
    await expect(page.locator('input[placeholder="邮箱地址"]')).toBeVisible();
    await expect(page.locator('input[placeholder="密码"]')).toBeVisible();
    await expect(page.locator('button[type="submit"]')).toBeVisible();
    
    console.log('Login page elements are visible');
  });

  test('should be able to access register page', async ({ page }) => {
    await page.goto('/register');
    
    // Check if register page loads with correct text
    await expect(page.locator('text=创建您的健康账户')).toBeVisible();
    await expect(page.locator('input[placeholder="请输入用户名"]')).toBeVisible();
    await expect(page.locator('input[placeholder="请输入邮箱地址"]')).toBeVisible();
    await expect(page.locator('input[placeholder="请输入密码"]')).toBeVisible();
    await expect(page.locator('input[placeholder="请确认密码"]')).toBeVisible();
    
    console.log('Register page elements are visible');
  });

  test('should attempt login with existing user', async ({ page }) => {
    await page.goto('/login');
    
    // Try to login with test user
    await page.fill('input[placeholder="邮箱地址"]', 'e2e.test@example2.com');
    await page.fill('input[placeholder="密码"]', 'TestPassword123!');
    
    // Click login button
    await page.click('button[type="submit"]');
    
    // Wait a bit to see what happens
    await page.waitForTimeout(3000);
    
    // Check current URL and visible text
    const currentUrl = page.url();
    console.log('Current URL after login attempt:', currentUrl);
    
    // If login successful, should redirect to dashboard
    if (currentUrl.includes('localhost:3000/')) {
      console.log('Login appears successful');
      await expect(page.locator('text=健康仪表板')).toBeVisible({ timeout: 5000 });
    } else {
      console.log('Login failed or still on login page');
    }
  });
});
