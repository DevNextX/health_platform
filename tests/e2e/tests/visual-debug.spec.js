/**
 * Visual Debugging Test (Slow Mode)
 * Generated by Zhuang
 */
import { test, expect } from '@playwright/test';

test.describe('Visual Debug Test', () => {
  
  const testUser = {
    username: 'e2e_test_user2',
    email: 'e2e.test@example2.com',
    password: 'TestPassword123!',
    age: 30,
    weight: 70
  };

  test('should perform login visually (slow mode)', async ({ page }) => {
    // Slow down all actions for visual debugging
    await page.goto('/login', { waitUntil: 'networkidle' });
    
    console.log('🚀 Starting visual login test...');
    await page.waitForTimeout(2000); // Wait 2 seconds
    
    // Check login page loads
    await expect(page.locator('text=请登录您的账户')).toBeVisible();
    console.log('✅ Login page loaded');
    await page.waitForTimeout(1000);
    
    // Fill email slowly
    console.log('📧 Filling email...');
    await page.fill('input[placeholder="邮箱地址"]', testUser.email);
    await page.waitForTimeout(1000);
    
    // Fill password slowly  
    console.log('🔒 Filling password...');
    await page.fill('input[placeholder="密码"]', testUser.password);
    await page.waitForTimeout(1000);
    
    // Click login button
    console.log('🔘 Clicking login button...');
    await page.click('button[type="submit"]');
    await page.waitForTimeout(3000);
    
    // Check result
    const currentUrl = page.url();
    console.log('🌐 Current URL:', currentUrl);
    
    if (currentUrl.includes('/dashboard') || currentUrl === 'http://localhost:3000/') {
      console.log('🎉 Login successful! Now checking dashboard...');
      await expect(page.locator('text=健康仪表板')).toBeVisible({ timeout: 10000 });
      console.log('✅ Dashboard loaded successfully');
      await page.waitForTimeout(2000);
      
      // Navigate to health records
      console.log('🏥 Navigating to health records...');
      await page.click('text=健康记录');
      await page.waitForTimeout(2000);
      
      await expect(page).toHaveURL('/health-records');
      console.log('✅ Health records page loaded');
      await page.waitForTimeout(2000);
      
    } else {
      console.log('❌ Login failed - still on login page');
    }
    
    console.log('🏁 Test completed!');
    await page.waitForTimeout(3000); // Keep browser open for 3 more seconds
  });

  test('should perform health record creation visually', async ({ page }) => {
    // Login first
    await page.goto('/login');
    await page.fill('input[placeholder="邮箱地址"]', testUser.email);
    await page.fill('input[placeholder="密码"]', testUser.password);
    await page.click('button[type="submit"]');
    await page.waitForTimeout(3000);
    
    // Navigate to health records
    await page.click('text=健康记录');
    await page.waitForTimeout(2000);
    
    console.log('🏥 On health records page');
    
    // Click add record button
    console.log('➕ Clicking add record button...');
    await page.click('text=添加记录');
    await page.waitForTimeout(2000);
    
    // Fill form slowly
    console.log('📋 Filling health record form...');
    await page.fill('input[placeholder="收缩压"]', '120');
    await page.waitForTimeout(500);
    
    await page.fill('input[placeholder="舒张压"]', '80');
    await page.waitForTimeout(500);
    
    await page.fill('input[placeholder="心率"]', '72');
    await page.waitForTimeout(500);
    
    await page.fill('textarea[placeholder*="注信息"]', 'Visual test record');
    await page.waitForTimeout(1000);
    
    // Submit form
    console.log('✅ Submitting form...');
    await page.click('button:has-text("添加")');
    await page.waitForTimeout(3000);
    
    // Check for success message
    const hasSuccess = await page.locator('.ant-message-success').isVisible();
    if (hasSuccess) {
      console.log('🎉 Health record created successfully!');
    } else {
      console.log('⚠️ No success message visible');
    }
    
    await page.waitForTimeout(3000);
    console.log('🏁 Health record test completed!');
  });
});
