# Backend Dockerfile
# Generated by Zhuang; Generated by Copilot
# syntax=docker/dockerfile:1

FROM python:3.12-slim AS base
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Security hardening
RUN adduser --disabled-password --gecos "" appuser \
 && apt-get update \
 && apt-get install -y --no-install-recommends build-essential \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install deps first for better caching
COPY requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt

# Copy backend source
COPY src /app/src
COPY instance /app/instance
# Ensure instance dir exists and is writable (for SQLite by default)
RUN mkdir -p /app/instance && chown -R appuser:appuser /app
COPY run_tests.py /app/run_tests.py

# Minimal runtime env
ENV FLASK_APP=src.app \
    PYTHONPATH=.

# Expose port
EXPOSE 5000

# Healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
 CMD python -c "import os,sys,urllib.request; url=f'http://127.0.0.1:{os.environ.get(\"PORT\",\"5000\")}/healthz';\n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    \n\
    try:\n\
        with urllib.request.urlopen(url, timeout=3) as r:\n\
            sys.exit(0 if r.status==200 else 1)\n\
    except Exception:\n\
        sys.exit(1)"

# Runtime variables to be overridden
ENV PORT=5000 \
    DATABASE_URL="sqlite:///instance/health_platform.db" \
    JWT_SECRET="change-me" \
    CORS_ORIGINS="http://localhost:3000,http://127.0.0.1:3000" \
    JWT_ACCESS_MINUTES=30 \
    JWT_REFRESH_DAYS=7

# Default command using gunicorn for production
# Bind on 0.0.0.0 and respect PORT
USER appuser
CMD ["bash", "-lc", "exec gunicorn -w ${GUNICORN_WORKERS:-2} -k gthread --threads ${GUNICORN_THREADS:-4} --timeout 60 --bind 0.0.0.0:${PORT} 'src.app:create_app()'"]
