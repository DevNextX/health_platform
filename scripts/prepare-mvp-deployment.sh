#!/bin/bash
# MVP Branch Deployment Preparation Script
# Generated by Zhuang

set -e

echo "🚀 Preparing MVP2.0-GPT5 branch for deployment testing..."

# Check current branch
current_branch=$(git rev-parse --abbrev-ref HEAD)
echo "📍 Current branch: $current_branch"

if [ "$current_branch" != "MVP2.0-GPT5" ]; then
    echo "⚠️  Warning: Expected MVP2.0-GPT5 branch, current: $current_branch"
    read -p "Continue anyway? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo ""
echo "🔍 Checking required files..."

# Check required files
required_files=(
    ".github/workflows/mvp-test-deploy.yml"
    ".github/workflows/deploy-dev.yml" 
    "Dockerfile.frontend.nonroot"
    "Dockerfile.backend"
    "frontend/package.json"
    "frontend/package-lock.json"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "✅ Found: $file"
    else
        echo "❌ Missing: $file"
        exit 1
    fi
done

echo ""
echo "🧪 Testing Docker builds locally..."

# Test frontend build
echo "📦 Testing frontend Docker build..."
if docker build -f Dockerfile.frontend.nonroot -t health-platform-frontend:local-test . > /dev/null 2>&1; then
    echo "✅ Frontend Docker build successful"
else
    echo "❌ Frontend Docker build failed"
    echo "Run manually to see details: docker build -f Dockerfile.frontend.nonroot -t health-platform-frontend:local-test ."
    exit 1
fi

# Test backend build  
echo "📦 Testing backend Docker build..."
if docker build -f Dockerfile.backend -t health-platform-backend:local-test . > /dev/null 2>&1; then
    echo "✅ Backend Docker build successful"
else
    echo "❌ Backend Docker build failed" 
    echo "Run manually to see details: docker build -f Dockerfile.backend -t health-platform-backend:local-test ."
    exit 1
fi

echo ""
echo "📋 Git status check..."
git_status=$(git status --porcelain)
if [ -n "$git_status" ]; then
    echo "📝 Uncommitted changes detected:"
    git status --short
    echo ""
    echo "🔄 Would you like to commit and push these changes?"
    read -p "Commit changes? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        read -p "Enter commit message: " commit_msg
        git add .
        git commit -m "$commit_msg"
        git push origin $current_branch
        echo "✅ Changes committed and pushed"
    fi
else
    echo "✅ No uncommitted changes"
fi

echo ""
echo "🎯 Deployment Options:"
echo ""
echo "Option 1: Test build only (recommended first)"
echo "  - Triggers: mvp-test-deploy.yml workflow"
echo "  - Action: Builds images, pushes to registry"
echo "  - No actual deployment to Kubernetes"
echo ""
echo "Option 2: Test build + deploy to dev"
echo "  - Triggers: mvp-test-deploy.yml workflow with manual dispatch"
echo "  - Action: Builds images + deploys to dev environment" 
echo "  - Requires: DEV_KUBE_CONFIG and DEV_KUBE_CONTEXT secrets"
echo ""
echo "Option 3: Create develop branch (for production workflow)"
echo "  - Creates and pushes develop branch"
echo "  - Triggers: deploy-dev.yml workflow automatically"
echo "  - Action: Full automated deployment pipeline"

echo ""
echo "🚀 Ready to trigger deployment!"
echo "Choose your next step:"
echo "1. Push to current branch (triggers MVP test build)"
echo "2. Go to GitHub Actions and manually run 'MVP Branch Test Deploy'"
echo "3. Create develop branch: git checkout -b develop && git push origin develop"

echo ""
echo "📊 Summary:"
echo "✅ All files validated"
echo "✅ Docker builds tested successfully"
echo "✅ Ready for deployment testing"
echo ""
echo "🔗 GitHub Actions: https://github.com/DevNextX/health_platform/actions"
