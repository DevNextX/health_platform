# Frontend Dockerfile (multi-stage)
# Generated by Zhuang; Generated by Copilot
# syntax=docker/dockerfile:1

FROM node:20-alpine AS build
WORKDIR /app
COPY frontend/package.json frontend/package-lock.json* ./
RUN npm ci || npm install
COPY frontend/ ./
RUN npm run build

# Runtime with Nginx to serve static files and proxy API
FROM nginx:1.27-alpine AS runtime
LABEL maintainer="health-platform"

# Copy build output to Nginx html
COPY --from=build /app/build /usr/share/nginx/html

# Nginx template and entrypoint
COPY deploy/nginx.conf.template /etc/nginx/templates/default.conf.template
COPY deploy/docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

ENV API_URL=http://backend:5000 \
    LISTEN_PORT=80
EXPOSE 80

HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
 CMD wget -qO- http://127.0.0.1:80/ || exit 1

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
