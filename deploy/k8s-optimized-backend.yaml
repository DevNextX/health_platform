# Optimized Backend Kubernetes Configuration
# Generated by Zhuang
apiVersion: v1
kind: Namespace
metadata:
  name: health-platform

---

# Secrets - replace values with secure ones before applying
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: health-platform
type: Opaque
stringData:
  JWT_SECRET: "your-secure-jwt-secret-here"
  # Replace with your production database URL
  DATABASE_URL: "sqlite:///instance/health_platform.db"

---

# ConfigMap for non-secret runtime configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: health-platform
data:
  PORT: "5000"
  # CORS origins including frontend service and external access
  CORS_ORIGINS: "http://frontend-svc.health-platform.svc.cluster.local:80,http://localhost:3000,http://127.0.0.1:3000"
  JWT_ACCESS_MINUTES: "30"
  JWT_REFRESH_DAYS: "7"
  DB_CREATE_ON_MISSING: "1"
  DB_AUTO_CREATE: "0"
  # Gunicorn workers configuration
  GUNICORN_WORKERS: "2"
  GUNICORN_THREADS: "4"

---

# Backend Deployment with optimized configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: health-platform
  labels:
    app: backend
    tier: backend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tier: backend
    spec:
      imagePullSecrets:
        - name: regcred
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: backend
          image: ghcr.io/devnextx/health-platform-backend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: backend-secrets
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 10
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          volumeMounts:
            - name: instance-data
              mountPath: /app/instance
      volumes:
        - name: instance-data
          emptyDir: {}

---

# Backend Service - ClusterIP for internal communication
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: health-platform
  labels:
    app: backend
    tier: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - name: http
      port: 5000
      targetPort: http
      protocol: TCP

---

# Backend LoadBalancer Service for external access (optional)
apiVersion: v1
kind: Service
metadata:
  name: backend-external
  namespace: health-platform
  labels:
    app: backend
    tier: backend
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
    - name: http
      port: 5000
      targetPort: http
      protocol: TCP

---

# HorizontalPodAutoscaler for backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: health-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
