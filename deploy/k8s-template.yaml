# Health Platform Kubernetes Deployment Template
# Generated by Zhuang
# This template supports configurable parameters for automated deployment

apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
  labels:
    app: health-platform

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ${NAMESPACE}
data:
  FLASK_ENV: "${FLASK_ENV}"
  CORS_ORIGINS: "${CORS_ORIGINS}"
  # Database and other configs will be added as needed

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: ${NAMESPACE}
data:
  LISTEN_PORT: "8080"
  API_URL: "http://backend-svc.${NAMESPACE}.svc.cluster.local:5000"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ${NAMESPACE}
  labels:
    app: backend
    version: ${IMAGE_TAG}
spec:
  replicas: ${BACKEND_REPLICAS}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        version: ${IMAGE_TAG}
    spec:
      containers:
        - name: backend
          image: ${REGISTRY_URL}/health-platform-backend:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
              name: http
          env:
            - name: FLASK_ENV
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: FLASK_ENV
            - name: CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: CORS_ORIGINS
          resources:
            requests:
              memory: "${BACKEND_MEMORY_REQUEST}"
              cpu: "${BACKEND_CPU_REQUEST}"
            limits:
              memory: "${BACKEND_MEMORY_LIMIT}"
              cpu: "${BACKEND_CPU_LIMIT}"
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ${NAMESPACE}
  labels:
    app: frontend
    version: ${IMAGE_TAG}
spec:
  replicas: ${FRONTEND_REPLICAS}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        version: ${IMAGE_TAG}
    spec:
      containers:
        - name: frontend
          image: ${REGISTRY_URL}/health-platform-frontend:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          envFrom:
            - configMapRef:
                name: frontend-config
          resources:
            requests:
              memory: "${FRONTEND_MEMORY_REQUEST}"
              cpu: "${FRONTEND_CPU_REQUEST}"
            limits:
              memory: "${FRONTEND_MEMORY_LIMIT}"
              cpu: "${FRONTEND_CPU_LIMIT}"
          livenessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: ${NAMESPACE}
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      name: http
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: ${NAMESPACE}
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  type: ${SERVICE_TYPE}
  # LoadBalancer external IP will be assigned automatically
  # or can be specified via loadBalancerIP field
