# Generated by Zhuang
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: health-platform
data:
  LISTEN_PORT: "80"
  API_URL: "http://backend.health-platform.svc.cluster.local:5000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: health-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        runAsNonRoot: true
      containers:
        - name: frontend
          image: ghcr.io/devnextx/health-platform-frontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: frontend-config
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: health-platform
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: health-platform-ingress
  namespace: health-platform
  annotations:
    kubernetes.io/ingress.class: nginx
  nginx.ingress.kubernetes.io/proxy-body-size: "8m"
  nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - health.local
      secretName: health-platform-tls
  rules:
    - host: health.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
