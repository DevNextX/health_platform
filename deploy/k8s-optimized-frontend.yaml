# Optimized Frontend Kubernetes Configuration
# Generated by Zhuang
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: health-platform
data:
  LISTEN_PORT: "80"
  # Use internal cluster DNS for backend communication
  API_URL: "http://backend-svc.health-platform.svc.cluster.local:5000"

---

# Frontend Deployment with optimized configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: health-platform
  labels:
    app: frontend
    tier: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
    spec:
      imagePullSecrets:
        - name: regcred
      securityContext:
        runAsUser: 101  # nginx user
        runAsGroup: 101 # nginx group
        fsGroup: 101
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: frontend
          image: ghcr.io/devnextx/health-platform-frontend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: frontend-config
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

---

# Frontend Service - LoadBalancer for external access
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: health-platform
  labels:
    app: frontend
    tier: frontend
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP

---

# Frontend Internal Service for cluster communication
apiVersion: v1
kind: Service
metadata:
  name: frontend-internal
  namespace: health-platform
  labels:
    app: frontend
    tier: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP

---

# HorizontalPodAutoscaler for frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: health-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
