apiVersion: v1
# Generated by Zhuang
kind: Namespace
metadata:
  name: health-platform

---

# Secrets - replace values with secure ones before applying
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: health-platform
type: Opaque
stringData:
  JWT_SECRET: "change-me"
  # DATABASE_URL should be set to your production DB connection string
  DATABASE_URL: "sqlite:///instance/health_platform.db"

---

# ConfigMap for non-secret runtime configuration
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: health-platform
data:
  PORT: "5000"
  # List common local origins and a placeholder for frontend LB IP.
  # After frontend LoadBalancer is provisioned, replace <FRONTEND_LB_IP> with its external IP.
  CORS_ORIGINS: "http://localhost:3000,http://127.0.0.1:3000,http://<FRONTEND_LB_IP>:80"
  JWT_ACCESS_MINUTES: "30"
  JWT_REFRESH_DAYS: "7"
  DB_CREATE_ON_MISSING: "1"
  DB_AUTO_CREATE: "0"

---

# Backend Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: health-platform
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      imagePullSecrets:
        - name: regcred
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: backend
          image: ghcr.io/devnextx/health-platform-backend:sha-8aef88b
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: backend-secrets
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

---

---
# Backend Service - expose via LoadBalancer for external access
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: health-platform
  labels:
    app: backend
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
    - name: http
      port: 5000
      targetPort: 5000

# Notes:
# 1) Create the secrets and regcred referenced above before applying, e.g.:
#    kubectl create ns health-platform
#    kubectl create secret generic backend-secrets -n health-platform --from-literal=JWT_SECRET='change-me' --from-literal=DATABASE_URL='postgres://user:pass@host:5432/db'
#    kubectl create secret docker-registry regcred --docker-server=ghcr.io --docker-username=<user> --docker-password=<token> -n health-platform
# 2) After applying, get the external IPs:
#    kubectl get svc -n health-platform
